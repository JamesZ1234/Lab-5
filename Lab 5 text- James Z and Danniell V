#include "vex.h"
float myVariable, startX, startY, startZ;
using namespace vex;

int displayPositionLoop() {

  Brain.Screen.setFont(mono60);
  
  while (true) {
    Brain.Screen.clearScreen();

    // Display the X position on row 1
    Brain.Screen.setCursor(1, 1);
    Brain.Screen.print("X: %.3f", RoboticArm1.getAxisPosition(xaxis));

    // Display the Y position on row 2
    Brain.Screen.newLine();
    Brain.Screen.print("Y: %.3f", RoboticArm1.getAxisPosition(yaxis));

    // Display the Z position on row 3
    Brain.Screen.newLine();
    Brain.Screen.print("Z: %.3f", RoboticArm1.getAxisPosition(zaxis));

    wait(0.2, seconds);
  }
  return 0;
}

// This is the function we want to run when the emergency stop button
// is pressed. It will tell the arm to stop moving.
void onEStopPressed() {
  RoboticArm1.emergencyStop();
}

int main() {
  // Initializing Robot Configuration. DO NOT REMOVE!
  vexcodeInit();
  RoboticArm1.setMasteringValues(1848,2141,1883,629);
  RoboticArm1.setToolTipOffset(1.05, 0.0, -1.0);
  startX = 6;
  startY = -1;
  startZ = 2.25;
  RoboticArm1.moveToPositionLinear(startX, startY, startZ);
  RoboticArm1.moveToPositionLinear(startX + 2.0, startY, startZ);
  RoboticArm1.moveToPositionLinear(startX + 2.0, startY + 2, startZ);
  RoboticArm1.moveToPositionLinear(startX, startY+2, startZ);
  RoboticArm1.moveToPositionLinear(startX, startY, startZ);
  wait(2,sec);
  RoboticArm1.moveToPositionLinear(startX, startY, startZ);
  RoboticArm1.moveToPositionLinear(startX-2, startY, startZ);
  RoboticArm1.moveToPositionLinear(startX-2, startY-2, startZ);
  RoboticArm1.moveToPositionLinear(startX,startY-2,startZ);
  RoboticArm1.moveToPositionLinear(startX, startY, startZ);
  return 0;
  // Link the emergency stop button pressed event with the onEStopPressed function
  EStop.pressed(onEStopPressed);

  // Start task to continuously display the current arm position
  vex::task displayPositionTask(displayPositionLoop);

  // Set up the arm with the initial configuration values
}
